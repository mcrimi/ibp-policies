
steal.plugins('jquery').then(function($){var regs={undHash:/_|-/,colons:/::/,words:/([A-Z]+)([A-Z][a-z])/g,lowerUpper:/([a-z\d])([A-Z])/g,dash:/([a-z\d])([A-Z])/g};var str=($.String={strip:function(string){return string.replace(/^\s+/,'').replace(/\s+$/,'');},capitalize:function(s,cache){return s.charAt(0).toUpperCase()+s.substr(1);},endsWith:function(s,pattern){var d=s.length-pattern.length;return d>=0&&s.lastIndexOf(pattern)===d;},camelize:function(s){var parts=s.split(regs.undHash),i=1;parts[0]=parts[0].charAt(0).toLowerCase()+parts[0].substr(1);for(;i<parts.length;i++)
parts[i]=str.capitalize(parts[i]);return parts.join('');},classize:function(s){var parts=s.split(regs.undHash),i=0;for(;i<parts.length;i++)
parts[i]=str.capitalize(parts[i]);return parts.join('');},niceName:function(s){var parts=s.split(regs.undHash),i=0;for(;i<parts.length;i++)
parts[i]=str.capitalize(parts[i]);return parts.join(' ');},underscore:function(s){return s.replace(regs.colons,'/').replace(regs.words,'$1_$2').replace(regs.lowerUpper,'$1_$2').replace(regs.dash,'_').toLowerCase()}});})
(function(factory){'use strict';if(typeof define==='function'&&define.amd){define(['jquery','Cookies'],factory);}else if(typeof exports==='object'){module.exports=factory();}else{var _OldLang=window.Lang;var api=window.Lang=factory(jQuery,typeof Cookies!=='undefined'?Cookies:undefined);api.noConflict=function(){window.Lang=_OldLang;return api;};}}(function($,Cookies){var Lang=function(){this._fireEvents=true;this._dynamic={};};Lang.prototype.init=function(options){var self=this,cookieLang,defaultLang,currentLang,allowCookieOverride;options=options||{};options.cookie=options.cookie||{};defaultLang=options.defaultLang;currentLang=options.currentLang;allowCookieOverride=options.allowCookieOverride;this.cookieName=options.cookie.name||'langCookie';this.cookieExpiry=options.cookie.expiry||365;this.cookiePath=options.cookie.path||'/';this._mutationCopies={append:$.fn.append,appendTo:$.fn.appendTo,prepend:$.fn.prepend,before:$.fn.before,after:$.fn.after,html:$.fn.html};$.fn.append=function(){return self._mutation(this,'append',arguments)};$.fn.appendTo=function(){return self._mutation(this,'appendTo',arguments)};$.fn.prepend=function(){return self._mutation(this,'prepend',arguments)};$.fn.before=function(){return self._mutation(this,'before',arguments)};$.fn.after=function(){return self._mutation(this,'after',arguments)};$.fn.html=function(){return self._mutation(this,'html',arguments)};this.defaultLang=defaultLang||'en';this.currentLang=defaultLang||'en';if((allowCookieOverride||!currentLang)&&typeof Cookies!=='undefined'){cookieLang=Cookies.get(this.cookieName);if(cookieLang){currentLang=cookieLang;}}
$(function(){self._start();if(currentLang&&currentLang!==self.defaultLang){self.change(currentLang);}});};Lang.prototype.pack={};Lang.prototype.attrList=['title','alt','placeholder','href'];Lang.prototype.dynamic=function(lang,path){if(lang!==undefined&&path!==undefined){this._dynamic[lang]=path;}};Lang.prototype.loadPack=function(lang,callback){var self=this;if(lang&&self._dynamic[lang]){$.ajax({dataType:"json",url:self._dynamic[lang],success:function(data){self.pack[lang]=data;if(self.pack[lang].regex){var packRegex=self.pack[lang].regex,regex,i;for(i=0;i<packRegex.length;i++){regex=packRegex[i];if(regex.length===2){regex[0]=new RegExp(regex[0]);}else if(regex.length===3){regex[0]=new RegExp(regex[0],regex[1]);regex.splice(1,1);}}}
if(callback){callback(false,lang,self._dynamic[lang]);}},error:function(){if(callback){callback(true,lang,self._dynamic[lang]);}
throw('Error loading language pack'+self._dynamic[lang]);}});}else{throw('Cannot load language pack, no file path specified!');}};Lang.prototype._start=function(selector){var arr=selector!==undefined?$(selector).find('[lang]'):$(':not(html)[lang]'),arrCount=arr.length,elem;while(arrCount--){elem=$(arr[arrCount]);this._processElement(elem);}};Lang.prototype._processElement=function(elem){if(elem.attr('lang')===this.defaultLang){this._storeAttribs(elem);this._storeContent(elem);}};Lang.prototype._storeAttribs=function(elem){var attrIndex,attr,attrObj;for(attrIndex=0;attrIndex<this.attrList.length;attrIndex++){attr=this.attrList[attrIndex];if(elem.attr(attr)){attrObj=elem.data('lang-attr')||{};attrObj[attr]=elem.attr(attr);elem.data('lang-attr',attrObj);}}};Lang.prototype._storeContent=function(elem){if(elem.is('input')){switch(elem.attr('type')){case'button':case'submit':case'hidden':case'reset':elem.data('lang-val',elem.val());break;}}else if(elem.is('img')){elem.data('lang-src',elem.attr('src'));}else{var nodes=this._getTextNodes(elem);if(nodes){elem.data('lang-text',nodes);}}};Lang.prototype._getTextNodes=function(elem){var nodes=elem.contents(),nodeObjArray=[],nodeObj={},nodeArr,that=this,map=Array.prototype.map;$.each(nodes,function(index,node){if(node.nodeType!==3){return;}
nodeObj={node:node,langDefaultText:node.data};nodeObjArray.push(nodeObj);});if(nodeObjArray.length===1){nodeObjArray[0].langToken=elem.data('langToken');}
return nodeObjArray;};Lang.prototype._setTextNodes=function(elem,nodes,lang){var index,textNode,defaultText,translation,regex,langNotDefault=lang!==this.defaultLang;for(index=0;index<nodes.length;index++){textNode=nodes[index];if(langNotDefault){defaultText=textNode.langToken||$.trim(textNode.langDefaultText);if(defaultText){translation=this.translate(defaultText,lang);regex=/<[^>]+>/g;if(regex.test(translation)){elem.context.innerHTML=translation;}else if(translation){try{textNode.node.data=textNode.node.data.split($.trim(textNode.node.data)).join(translation);}catch(e){}}else{if(console&&console.log){console.log('Translation for "'+defaultText+'" not found!');}}}}else{try{textNode.node.data=textNode.langDefaultText;}catch(e){}}}};Lang.prototype._translateAttribs=function(elem,lang){var attr,attrObj=elem.data('lang-attr')||{},translation;for(attr in attrObj){if(attrObj.hasOwnProperty(attr)){if(elem.attr(attr)){if(lang!==this.defaultLang){translation=this.translate(attrObj[attr],lang);if(translation){elem.attr(attr,translation);}}else{elem.attr(attr,attrObj[attr]);}}}}};Lang.prototype._translateContent=function(elem,lang){var langNotDefault=lang!==this.defaultLang,translation,nodes;if(elem.is('input')){switch(elem.attr('type')){case'button':case'submit':case'hidden':case'reset':if(langNotDefault){translation=this.translate(elem.data('lang-val'),lang);if(translation){elem.val(translation);}}else{elem.val(elem.data('lang-val'));}
break;}}else if(elem.is('img')){if(langNotDefault){translation=this.translate(elem.data('lang-src'),lang);if(translation){elem.attr('src',translation);}}else{elem.attr('src',elem.data('lang-src'));}}else{nodes=elem.data('lang-text');if(nodes){this._setTextNodes(elem,nodes,lang);}}};Lang.prototype.change=function(lang,selector,callback){var self=this;if(lang===this.defaultLang||this.pack[lang]||this._dynamic[lang]){if(lang!==this.defaultLang){if(!this.pack[lang]&&this._dynamic[lang]){this.loadPack(lang,function(err,loadingLang,fromUrl){if(!err){self.change.call(self,lang,selector,callback);}else{if(callback){callback('Language pack could not load from: '+fromUrl,lang,selector);}}});return;}else if(!this.pack[lang]&&!this._dynamic[lang]){if(callback){callback('Language pack not defined for: '+lang,lang,selector);}
throw('Could not change language to '+lang+' because no language pack for this language exists!');}}
var fireAfterUpdate=false,currLang=this.currentLang;if(this.currentLang!=lang){this.beforeUpdate(currLang,lang);fireAfterUpdate=true;}
this.currentLang=lang;var arr=selector!==undefined?$(selector).find('[lang]'):$(':not(html)[lang]'),arrCount=arr.length,elem;while(arrCount--){elem=$(arr[arrCount]);if(elem.attr('lang')!==lang){this._translateElement(elem,lang);}}
if(fireAfterUpdate){this.afterUpdate(currLang,lang);}
if(typeof Cookies!=="undefined"){Cookies.set(self.cookieName,lang,{expires:self.cookieExpiry,path:self.cookiePath});}
if(callback){callback(false,lang,selector);}}else{if(callback){callback('No language pack defined for: '+lang,lang,selector);}
throw('Attempt to change language to "'+lang+'" but no language pack for that language is loaded!');}};Lang.prototype._translateElement=function(elem,lang){this._translateAttribs(elem,lang);if(elem.attr('data-lang-content')!='false'){this._translateContent(elem,lang);}
elem.attr('lang',lang);};Lang.prototype.translate=function(text,lang){lang=lang||this.currentLang;if(this.pack[lang]){var translation='';if(lang!=this.defaultLang){translation=this.pack[lang].token[text];if(!translation){translation=this._regexMatch(text,lang);}
if(!translation){if(console&&console.log){console.log('Translation for "'+text+'" not found in language pack: '+lang);}}
return translation||text;}else{return text;}}else{return text;}};Lang.prototype._regexMatch=function(text,lang){var arr,arrCount,arrIndex,item,regex,expressionResult;arr=this.pack[lang].regex;if(arr){arrCount=arr.length;for(arrIndex=0;arrIndex<arrCount;arrIndex++){item=arr[arrIndex];regex=item[0];expressionResult=regex.exec(text);if(expressionResult&&expressionResult[0]){return text.split(expressionResult[0]).join(item[1]);}}}
return'';};Lang.prototype.beforeUpdate=function(currentLang,newLang){if(this._fireEvents){$(this).triggerHandler('beforeUpdate',[currentLang,newLang,this.pack[currentLang],this.pack[newLang]]);}};Lang.prototype.afterUpdate=function(currentLang,newLang){if(this._fireEvents){$(this).triggerHandler('afterUpdate',[currentLang,newLang,this.pack[currentLang],this.pack[newLang]]);}};Lang.prototype.refresh=function(){this._fireEvents=false;this.change(this.currentLang);this._fireEvents=true;};Lang.prototype._mutation=function(context,method,args){var result=this._mutationCopies[method].apply(context,args),currLang=this.currentLang,rootElem=$(context);if(rootElem.attr('lang')){this._fireEvents=false;this._translateElement(rootElem,this.defaultLang);this.change(this.defaultLang,rootElem);this.currentLang=currLang;this._processElement(rootElem);this._translateElement(rootElem,this.currentLang);}
this._start(rootElem);this.change(this.currentLang,rootElem);this._fireEvents=true;return result;};return Lang;}));